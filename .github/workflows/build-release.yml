name: Build and Release
on:
  push:
    branches:
      - main
jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            artifact_name: mbss
            asset_name: mbss-linux
          - os: windows-latest
            artifact_name: mbss.exe
            asset_name: mbss-windows
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Build (default features)
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release

    - name: Build (no default features)
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --no-default-features

    - name: List contents of release directory
      run: ls -R target/release
      
    - name: Rename artifacts
      run: |
        if [ -f "target/release/${{ matrix.artifact_name }}" ]; then
          mv target/release/${{ matrix.artifact_name }} ${{ matrix.asset_name }}
          cp target/release/${{ matrix.artifact_name }} ${{ matrix.asset_name }}-nostrip
        else
          echo "Error: ${{ matrix.artifact_name }} not found in target/release"
          exit 1
        fi
      shell: bash

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: |
          ${{ matrix.asset_name }}
          ${{ matrix.asset_name }}-nostrip

  release:
    name: Update Release
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

    - name: Update Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        name: Release ${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false
        files: |
          mbss-linux/mbss-linux
          mbss-linux/mbss-linux-nostrip
          mbss-windows/mbss-windows.exe
          mbss-windows/mbss-windows-nostrip.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Update Latest Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: latest
        name: Latest Release
        draft: false
        prerelease: false
        files: |
          mbss-linux/mbss-linux
          mbss-linux/mbss-linux-nostrip
          mbss-windows/mbss-windows.exe
          mbss-windows/mbss-windows-nostrip.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
