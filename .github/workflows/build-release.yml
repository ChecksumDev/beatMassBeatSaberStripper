name: Build and Release

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Run tests
        run: cargo test --verbose

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - name: Check formatting
        run: cargo fmt --all -- --check
      - name: Run clippy
        run: cargo clippy -- -D warnings

  build:
    name: Build
    needs: [test, lint]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
      - name: Build (default features)
        run: cargo build --release
      - name: Build (no default features)
        run: cargo build --release --no-default-features
      - name: Rename and copy artifacts
        run: |
          move target\release\mbss.exe mbss.exe
          copy mbss.exe mbss-nostrip.exe
        shell: cmd
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mbss-executables
          path: |
            mbss.exe
            mbss-nostrip.exe

  release:
    name: Release
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: mbss-executables
      - name: Get the version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          files: |
            mbss.exe
            mbss-nostrip.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-latest:
    name: Update Latest Release
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: mbss-executables
      - name: Update Latest Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest
          name: Latest Release
          draft: false
          prerelease: false
          files: |
            mbss.exe
            mbss-nostrip.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
